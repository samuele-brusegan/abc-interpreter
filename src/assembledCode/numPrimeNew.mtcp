00  |  0C000006  | jump start
01  |  00000001  | 0x1              :uno
02  |  00000002  | 0x2              :due
03  |  00000000  | 0x0              :zero
04  |  00000000  | to be input      :num
05  |  00000002  | 0x2              :I
06  |  02000200  | in 200           :start
07  |  01000004  | store num
08  |  00000004  | load num
09  |  05000001  | sub uno
0A  |  0D00001B  | jz notPrime
0B  |  00000004  | load num
0C  |  05000002  | sub due
0D  |  0D000018  | jz prime
0E  |  00000004  | load num         :loop
0F  |  08000005  | mod i
10  |  0D00001B  | jz notPrime //ref
11  |  00000005  | load i
12  |  04000001  | add uno
13  |  01000005  | store i
14  |  00000004  | load num
15  |  07000002  | div due
16  |  05000005  | sub i
17  |  0F00000E  | jgz loop //ref
18  |  00000001  | load uno         :prime
19  |  03000100  | out 100
1A  |  0C00001D  | jump end //ref
1B  |  00000003  | load zero        :notPrime
1C  |  03000100  | out 100
1D  |  0C00001D  | end              :end